

+-----------------------------------------------------------------------------+
|                                                                             |
|                                                                             |
|                 ---==---   GDPLib versjon 1.0   ---==---                    |
|                                                                             |
|                                                                             |
+-----------------------------------------------------------------------------+


Innhold
-------------------------------------------------------------------------------

1. Introduksjon
2. Gjenstående arbeid, aka todo's.
3. Kravspesifisering og design
4. Bruksanvisning
5. Grafiskt brukergrensesnitt


1. Introduksjon
-------------------------------------------------------------------------------

Dette er et C -bibliotek som implementerer kjernefunksjonaliteten til et
'Gubberenn Dataprogram'. Et 'Gubberenn Dataprogram' er et dataprogram som kan
være et hjelpemiddel ifm arrangeringen av 'Gubberennet', som avvikles hver 
skjærtorsdag i Bjørkebakken, av Bjørkebakken & Omegn Grendelag.

'Gubberennet' har følgende regler:

$1
    Deltakerne skal gå skirennet i par, som i utgangspunktet skal består av
    en dame og en mann.

$2
    Parene skal settes sammen tilfeldig. Det betyr at deltakerne ikke får
    velge selv hvem de skal gå i lag med, eller hvilket parnummer de skal få.

$3
    Løpet arrangeres med intervallstart.

$4
    Parene får med seg et oppgaveark ut i løypa. Dette oppgavearket, samt
    eventuelt andre praktiske oppgaver, skal løses underveis. Tilsamme kan
    disse oppgavene resultere i maksimalt 40 av totalt 100 poeng.

$5
    Alle parene blir klokket inn på ei mål-tid. Ut fra alle mål-tidene beregnes
    det et gjennomsnitt av anvendt tid, aka 'idealtid'. For hvert minutt et par
    avviker fra denne 'idealtiden', trekkes det ett poeng fra en maksimal
    poengsum på 60 poeng. Det betyr at om man har et avvik på mer enn en time,
    får man 0 tids-poeng. Det betyr også at om man går på idealtiden, samt
    svarer korrekt på oppgavearket, som gir 40 poeng, kan man få maksimalt
    100 poeng.


2. Gjenstående arbeid, aka todo's
-------------------------------------------------------------------------------
    
    - alt i denne lesmeg.txt fila etter punkt 3 (dvs punkt 4 og 5 er todo's)
    - csv-basert testklient, implementert i C
    - doxygen-dokumentasjon av all kode
    - autoconf / make byggeskript
    - finne skrivefeil rundt omkring ... 
    
    
3. Kravspesifisering og design
-------------------------------------------------------------------------------

Biblioteket skal implementeres i ANSI C. Dette språket har antageligvis størst 
sjanse for å overleve noen ti-år frem i tiden, empiriskt sett, våren 2015 :-)

Et annet argument for å bruke ANSI C, er at problemstillingen som biblioteket
løser, egner seg veldig godt som et studieobjekt for de som ønsker å lære seg å
programmere. Kanskje kan man etterhvert lage en 'tutorial'-serie rundt denne 
koden?

Et overordna designvalg med hensyn til C -programmering, er hvordan man velger
å dele opp problemstillingen i stadig mindre deler. De største delene putter
man gjerne i egne filer.

Jeg har valgt å dele problemstillingen opp i følgende hoveddeler:

    log.h / log.c

    Vi må kunne logge litt hva som skjer rund omkring i koden. Spesielt når noe
    feiler må man kunne 'si i fra' på en eller annen måte.

    konkurranse.h / konkurranse.c

    Vi snakker om et skirenn. Det er en konkurranse. Den avholdes hvert år.
    Det betyr at systemet bør støtte flere konkurranser. Kanskje bør systemet
    støtte et arkiv av konkurranser?


    par.h / par.c

    I konkurransen er det par som konkurerer mot hverandre. Disse parene har
    ei starttid, ei måltid, ei anvendt tid, tidspoeng og oppgavepoeng. Og til
    syvende og sist ei plassering i konkurransen.


    person.h / par.c

    Parene består av to personer. Disse har et fornavn og et etternavn.


    kontroller.h / kontroller.c

    Parene skal settes tilfeldig sammen. Det betyr at det hadde vært kjekt om
    programmet kunne levert funksjonalitet rundt dette; dvs trekke et tilfeldig
    ledig par-nummer.


    modell.h / modell.c

    Data som registreres bør helst dukke opp igjen etter at datamaskinen har
    vært slått av. Det er selvfølgelig et fancy ord for dette; data må være
    persistent (vedvarende). På godt norsk; data må lagres til fil, og kunne
    hentes fra fil, om man ønsker det.


    main.h / main.c

    Denne delen skal inneholde en enkel test-klient som tar som input et
    filnavn til ei csv-data-fil, og returnerer ei ny datafil som innehoder
    samme data, pluss de beregnede verdiene.
    
    Eksempel på inputfil:

Startnummer;Herre-fornavn;Herre-etternavn;Dame-fornavn;Dame-etternavn;Start-tid;Slutt-tid;Oppgave-poeng
100;Ola1;Nordmann1;Kari1;Nordkvinne1;12:00:00;14:32:00;20
101;Ola2;Nordmann2;Kari2;Nordkvinne2;12:01:00;14:00:00;21

    Eksempel på outputfil:

Plassering;Startnummer;Herre-navn;Dame-navn;Start-tid;Slutt-tid;Oppgave-poeng;Beregnet middel-tid;Beregnet anvendt-tid;Beregnet avveket-tid;Beregnet tids-poeng;Beregnet total-poeng;
1;102;Ola3 Nordmann3;Kari3 Nordkvinne3;12:2:0;14:36:0;22;2:33:32;2:34:0;0:0:28;60;82;
2;103;Ola4 Nordmann4;Kari4 Nordkvinne4;12:3:0;14:38:0;23;2:33:32;2:35:0;0:1:28;59;82;


Og sist, men ikke minst. Siden det sikkert er en god ide`, og ikke minst høres
ufattelig coolt ut, så skal 'SEL-94-003' i størst mulig grad etterleves :-)


src -+
     |
     +- gdpl.h
     |
     +- konkuranse.h / konkuranse.c
     |
     +- kontroller.h / kontroller.c
     |
     +- log.h / log.c
     |
     +- main.h / main.c
     |
     +- modell.h / modell.c
     |
     +- par.h / par.c
     |
     +- person.h / person.c

	 
     
4. Bruksanvisning
-----------------

Brukeren av biblioteket vil være et program som implementerer et bruker-
grensesnitt. En normal kronologisk bruk av biblioteket kan være som følger:

4.1 Initiering
--------------

4.1.1)
Initier biblioteket mht lognivå og loggmedium.

int GDPL_log_init(GDPL_log_type nivaa, FILE * stream);

4.1.2)
Angi hvilken datafil som skal benyttes. Om man her angir en nullpeker, 
vil biblioteket benytte ei default datafil.

int GDPL_modell_angi_filnavn(const char *filnavn);

4.1.3)
Les data fra datafil. 

int GDPL_modell_les_data();


4.2 Registrering av deltakere og par
------------------------------------

4.2.1)
Siden programmet skal velge et tilfeldig par-nummer for en deltaker,
må vi på forhand estimere hvor mange par vi tror kommmer til å delta. 

int GDPL_kontroller_angi_max_antall_par(int antall)

4.2.2)
Registrer en deltaker.

int GDPL_kontroller_registrer_deltaker(GDPL_person_data_node data, int type)

4.2.3)
Trekk et tilfeldig par-nummer for denne deltakeren.

int GDPL_kontroller_hent_par_id(int *par_id, int type)

4.2.4)
Oppdater det aktuelle par-objektet med den aktuelle brukeren.

int GDPL_kontroller_oppdater_par(int par_id, int person_id, int type)


Nå gjentas punktene 3.2.2 til 3.2.4 så lenge som nødvendig. 'På slutten' kan 
man droppe å bruke den tilfeldige par-nummer-generatoren, og mer eller mindre 
manuelt fylle opp de siste plassene. På slutten må man uansett trikse litt, 
for å få fylt opp alle parene. Somregel må et par betså av to damer eller to 
herrer.


4.3 Generer ei startliste
-------------------------

4.3.1)
Opprett ei startliste, hvor man angir når tid man skal begynne å starte, 
samt intervallene mellom hvert par.

int GDPL_kontroller_opprett_startliste( char *startid, char* intervall)


4.4 Registrer resultater
------------------------

4.4.1)
Registrer innkomst tid. Programmet beregner anvendt tid per par, samt middel-
tiden totalt i konkurransen. Tidspoeng beregnes utfra avvik fra middeltid.

int GDPL_kontroller_registrer_tid( int par_id, char *tid)


4.4.2)
Registrer oppgavepoeng.

int GDPL_kontroller_registrer_oppgavepoeng( int par_id, double poeng)


4.4 Generer resultatliste
-------------------------

int GDPL_kontroller_opprett_resultatliste()


5. Grafiskt brukergrensesnitt 
-------------------------------------------------------------------------------

Det grafiske brukergrensesnittet vil være sentrert rundt en tre-struktur, hvor
topp noden heter 'Arkiv'. Under arkivet kommer de ulike konkurranse-objektene.
En konkurranse består av par, som har sitt unike startnummer. Hvert par består
av to personer.



+-----------------------------------------------------------------------------+
| Fil Oppsett Hjelp                                                           |
+-----------------------------------------------------------------------------+
|                                                                             |         
|                                                                             |         
|                                                                             |         
|                                                                             |         
|                                                                             |         
|                                                                             |         
|                                                                             |         
|                                                                             |         
|                                                                             |         
|                                                                             |         
|                                                                             |         
|                                                                             |         
|                                                                             |         
|                                                                             |         
|                                                                             |         
|                                                                             |         
|                                                                             |         
|                                                                             |         
|                                                                             |         
|                                                                             |         
|                                                                             |         
+-----------------------------------------------------------------------------+



 Fil
   - Ny konkurranse
   - Åpne konkurranse
   - Lukk konkurranse
   - Lagre konkurranse
   - Avslutt
   
 Oppsett
   - Endre instillinger (log-level etc)

 Hjelp
   - Hjelp
   - Om 
   
    














- The End -

