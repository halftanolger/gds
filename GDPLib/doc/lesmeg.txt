
lesmseg.txt


+-----------------------------------------------------------------------------+
|                                                                             |
|                                                                             |
|                 ---==---   GDPLib versjon 1.0   ---==---                    |
|                                                                             |
|                                                                             |
+-----------------------------------------------------------------------------+


Innhold
-------------------------------------------------------------------------------

1. Introduksjon
2. Kravspesifisering og design
3. Bruksanvisning


1. Introduksjon
-------------------------------------------------------------------------------

Dette er et C -bibliotek som implementerer kjernefunksjonaliteten til et
'Gubberenn Dataprogram'. Et 'Gubberenn Dataprogram' er et dataprogram som kan
være et hjelpemiddel ifm arrangeringen av 'Gubberennet'.

'Gubberennet' har følgende regler:

$1
    Deltakerne skal gå skirennet i par, som i utgangspunktet består av
    en dame og en mann.

$2
    Parene skal settes sammen tilfeldig. Det betyr at deltakerne ikke får
    velge selv, hvem de skal gå i lag med.

$3
    Løpet arrangeres med intervallstart, pr par.

$4
    Parene får med seg et oppgaveark ut i løypa. Dette oppgavearket, samt
    eventuelt andre praktiske oppgaver, skal løses underveis. Tilsamme kan
    disse oppgavene resultere i maksimalt 40 poeng.

$5
    Alle parene blir klokket inn på ei mål-tid. Ut fra alle parene, beregnes
    det ei gjennomsnittstid, også kjent som 'idealtiden'. For hvert minutt
    et par avviker fra denne 'ideltiden', trekkes det ett poeng fra en
    maksimal poengsum på 60. Det betyr f.eks at om man har et avvik på mer enn
    en time, får man 0 tids-poeng.




2. Kravspesifisering og design
-------------------------------------------------------------------------------

Jeg har to ønsker med dette biblioteket; primært å lage en enkel kode i ANSI C
som kan overleve noen ti-år. Deretter å lage noe som kan brukes som et utgangs-
punkt for personser som ønsker å lære seg å programmere en datamaskin.

(Jeg er av den oppfatningen, at for de som ønsker å lære seg å programmere, så
er ANSI C et godt valgt. På samme måte som om at 'tallteori' er viktig å se på,
om du øsnker å forstå mer mattematikk, så er ANSI C viktig å forstå, om du
ønsker å skjønne hvordan en datamaskin egentlig fungerer.)

Jeg har delt 'problemet' opp i følgende deler.

    log.h / log.c

    Vi må kunne logge litt hva som skjer rund omkring i koden. Spesielt når noe
    feiler, må man 'si i fra' på en eller annen måte.


    konkurranse.h / konkurranse.c

    Vi snakker om et skirenn. Det er en konkurranse. Den avholdes hvert år, det
    betyr at systemet bør støtte flere konkurranser. Kanskje bør systemet
    støtte et arkiv av konkurranser?


    par.h / par.c

    I konkurransen er det par som konkurerer mot hverandre. Disse parene har
    ei starttid, ei måltid, ei anvendt tid, tidspoeng og oppgavepoeng. Og til
    syvende og sist ei plassering i konkurransen.


    person.h / par.c

    Parene består av to personer. Disse har et fornavn og et etternavn.


    kontroller.h / kontroller.c

    Parene skal settes tilfeldig sammen. Det betyr at det hadde vært kjekt om
    programmet kunne levert funksjonalitet rundt dette; dvs trekke et tilfeldig
    par-nummer.


    modell.h / modell.c

    Data som registreres bør helst dukke opp igjen, etter at datamaskinen har
    vært slått av. Det er selvfølgelig et fancy ord for dette; data må være
    persistent (vedvarende). På godt norsk; data må lagres til fil, og kunne
    hentes fra fil, om man ønsker det.


    main.h / main.c

    Denne delen skal inneholde en enkel test-klient som tar som input et
    filnavn til ei csv-data-fil, og returnerer ei ny datafil som innehoder
    samme data, pluss de beregede verdiene.
    Eksempel på inputfil:

Startnummer;Herre-fornavn;Herre-etternavn;Dame-fornavn;Dame-etternavn;Start-tid;Slutt-tid;Oppgave-poeng
100;Ola1;Nordmann1;Kari1;Nordkvinne1;12:00:00;14:32:00;20
101;Ola2;Nordmann2;Kari2;Nordkvinne2;12:01:00;14:00:00;21

    Eksempel på outputfil:

Plassering;Startnummer;Herre-navn;Dame-navn;Start-tid;Slutt-tid;Oppgave-poeng;Beregnet middel-tid;Beregnet anvendt-tid;Beregnet avveket-tid;Beregnet tids-poeng;Beregnet total-poeng;
1;102;Ola3 Nordmann3;Kari3 Nordkvinne3;12:2:0;14:36:0;22;2:33:32;2:34:0;0:0:28;60;82;
2;103;Ola4 Nordmann4;Kari4 Nordkvinne4;12:3:0;14:38:0;23;2:33:32;2:35:0;0:1:28;59;82;


Og sist, men ikke minst. Siden det sikkert er en god ide`, og ikke minst høres
ufattelig coolt ut, så skal 'SEL-94-003' i størst mulig grad etterleves :-)


src -+
     |
     +- gdpl.h
     |
     +- konkuranse.h / konkuranse.c
     |
     +- kontroller.h / kontroller.c
     |
     +- log.h / log.c
     |
     +- modell.h / modell.c
     |
     +- par.h / par.c
     |
     +- person.h / person.c

	 
     
3. Bruksanvisning
-----------------

Brukeren av biblioteket vil være et program som implementerer et bruker-
grensesnitt. En normal kronologisk bruk av biblioteket kan være som følger:

3.1 Initiering
--------------

3.1.1)
Initier biblioteket mht lognivå og loggmedium.

int GDPL_init(GDPL_log_type nivaa, FILE * stream); 

3.1.2)
Angi hvilken datafil som skal benyttes. Om man her angir en nullpeker, 
vil biblioteket benytte ei default datafil.

int GDPL_kontroller_angi_filnavn(const char *filnavn);

3.1.3)
Les data fra datafil. 

int GDPL_kontroller_les_fra_fil();


3.2 Registrering av deltakere og par
------------------------------------

3.2.1)
Siden programmet skal velge et tilfeldig par-nummer for en deltaker,
må vi på forhand estimere hvor mange par vi tror kommmer til å delta. 

int GDPL_kontroller_angi_max_antall_par(int antall)

3.2.2)
Registrer en deltaker.

int GDPL_kontroller_registrer_deltaker(GDPL_person_data_node data, int type)

3.2.3)
Trekk et tilfeldig par-nummer for denne deltakeren.

int GDPL_kontroller_hent_par_id(int *par_id, int type)

3.2.4)
Oppdater det aktuelle par-objektet med den aktuelle brukeren.

int GDPL_kontroller_oppdater_par(int par_id, int person_id, int type)


Nå gjentas punktene 3.2.2 til 3.2.4 så lenge som nødvendig. 'På slutten' kan 
man droppe å bruke den tilfeldige par-nummer-generatoren, og mer eller mindre 
manuelt fylle opp de siste plassene. På slutten må man uansett trikse litt, 
for å få fylt opp alle parene. Somregel må et par betså av to damer eller to 
herrer.


3.3 Generer ei startliste
-------------------------

3.3.1)
Opprett ei startliste, hvor man angir når tid man skal begynne å starte, 
samt intervallene mellom hvert par.

int GDPL_kontroller_opprett_startliste( char *startid, char* intervall)


3.4 Registrer resultater
------------------------

3.4.1)
Registrer innkomst tid. Programmet beregner anvendt tid per par, samt middel-
tiden totalt i konkurransen. Tidspoeng beregnes utfra avvik fra middeltid.

int GDPL_kontroller_registrer_tid( int par_id, char *tid)


3.4.2)
Registrer oppgavepoeng.

int GDPL_kontroller_registrer_oppgavepoeng( int par_id, double poeng)


3.4 Generer resultatliste
-------------------------

int GDPL_kontroller_opprett_resultatliste()


4. Brukergrensesnitt Qt
-----------------------

Brukergrensesnittet i Qt utgave, er definert som en single document application
hvor en tabell over alle par'ene er den sentrale widget'en. Ulike andre view er
definert som drop views rundt denne.




+-----------------------------------------------------------------------------+
| Fil Oppsett Hjelp                                                           |
+-----------------------------------------------------------------------------+
|                                                                             |         
|                                                                             |         
|                                                                             |         
|                                                                             |         
|                                                                             |         
|                                                                             |         
|                                                                             |         
|                                                                             |         
|                                                                             |         
|                                                                             |         
|                                                                             |         
|                                                                             |         
|                                                                             |         
|                                                                             |         
|                                                                             |         
|                                                                             |         
|                                                                             |         
|                                                                             |         
|                                                                             |         
|                                                                             |         
|                                                                             |         
+-----------------------------------------------------------------------------+



 Fil
   - Ny konkurranse
   - Åpne konkurranse
   - Lukk konkurranse
   - Lagre konkurranse
   - Avslutt
   
 Oppsett
   - Endre instillinger (log-level etc)

 Hjelp
   - Hjelp
   - Om 
   
    














- The End -

